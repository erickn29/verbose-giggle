"""init

Revision ID: 139142716e39
Revises: 
Create Date: 2024-09-16 13:50:03.362952

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "139142716e39"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "city",
        sa.Column("name", sa.String(length=64), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_city")),
        sa.UniqueConstraint("id", name=op.f("uq_city_id")),
        sa.UniqueConstraint("name", name=op.f("uq_city_name")),
    )
    op.create_table(
        "question",
        sa.Column("text", sa.Text(), nullable=False),
        sa.Column("technology", sa.String(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_question")),
        sa.UniqueConstraint("id", name=op.f("uq_question_id")),
    )
    op.create_table(
        "tool",
        sa.Column("name", sa.String(length=128), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_tool")),
        sa.UniqueConstraint("id", name=op.f("uq_tool_id")),
        sa.UniqueConstraint("name", name=op.f("uq_tool_name")),
    )
    op.create_table(
        "user",
        sa.Column("email", sa.String(length=32), nullable=False),
        sa.Column("password", sa.String(length=512), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("is_admin", sa.Boolean(), nullable=False),
        sa.Column("is_verified", sa.Boolean(), nullable=False),
        sa.Column("coin", sa.Integer(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_user")),
        sa.UniqueConstraint("email", name=op.f("uq_user_email")),
        sa.UniqueConstraint("id", name=op.f("uq_user_id")),
    )
    op.create_table(
        "answer",
        sa.Column("text", sa.Text(), nullable=False),
        sa.Column("score", sa.Integer(), nullable=False),
        sa.Column("question_id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["question_id"],
            ["question.id"],
            name=op.f("fk_answer_question_id_question"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
            name=op.f("fk_answer_user_id_user"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_answer")),
        sa.UniqueConstraint("id", name=op.f("uq_answer_id")),
    )
    op.create_table(
        "company",
        sa.Column("name", sa.String(length=128), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("city_id", sa.UUID(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["city_id"],
            ["city.id"],
            name=op.f("fk_company_city_id_city"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_company")),
        sa.UniqueConstraint("id", name=op.f("uq_company_id")),
    )
    op.create_table(
        "employee",
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("first_name", sa.String(length=32), nullable=False),
        sa.Column("last_name", sa.String(length=32), nullable=False),
        sa.Column("patronymic", sa.String(length=32), nullable=False),
        sa.Column("dob", sa.DateTime(timezone=True), nullable=False),
        sa.Column("sex", sa.Boolean(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
            name=op.f("fk_employee_user_id_user"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_employee")),
        sa.UniqueConstraint("id", name=op.f("uq_employee_id")),
        sa.UniqueConstraint("user_id", name=op.f("uq_employee_user_id")),
    )
    op.create_table(
        "recovery_token",
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("token", sa.String(length=32), nullable=False),
        sa.Column("is_used", sa.Boolean(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
            name=op.f("fk_recovery_token_user_id_user"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_recovery_token")),
        sa.UniqueConstraint("id", name=op.f("uq_recovery_token_id")),
    )
    op.create_table(
        "employer",
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("company_id", sa.UUID(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["company_id"],
            ["company.id"],
            name=op.f("fk_employer_company_id_company"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
            name=op.f("fk_employer_user_id_user"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_employer")),
        sa.UniqueConstraint("company_id", "user_id", name="uq_company_user"),
        sa.UniqueConstraint("id", name=op.f("uq_employer_id")),
    )
    op.create_table(
        "resume",
        sa.Column("employee_id", sa.UUID(), nullable=False),
        sa.Column("position", sa.Text(), nullable=False),
        sa.Column(
            "speciality",
            postgresql.ENUM(
                "разработка",
                "аналитика",
                "devops",
                "системное администрирование",
                "дата-инженерия",
                "машинное обучение",
                "управление проектами",
                "руководство разработкой",
                "архитектура проектов",
                "информационная безопасность",
                "тестирование",
                name="speciality",
            ),
            nullable=False,
        ),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("is_publish", sa.Boolean(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["employee_id"],
            ["employee.id"],
            name=op.f("fk_resume_employee_id_employee"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_resume")),
        sa.UniqueConstraint("id", name=op.f("uq_resume_id")),
    )
    op.create_table(
        "vacancy",
        sa.Column("title", sa.String(length=128), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("language", sa.String(length=16), nullable=False),
        sa.Column("speciality", sa.String(length=32), nullable=False),
        sa.Column("experience", sa.String(length=32), nullable=False),
        sa.Column("salary_from", sa.Integer(), nullable=True),
        sa.Column("salary_to", sa.Integer(), nullable=True),
        sa.Column("is_publish", sa.Boolean(), nullable=False),
        sa.Column("company_id", sa.UUID(), nullable=False),
        sa.Column("link", sa.Text(), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["company_id"],
            ["company.id"],
            name=op.f("fk_vacancy_company_id_company"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_vacancy")),
        sa.UniqueConstraint("company_id", "title", name="uq_company_title"),
        sa.UniqueConstraint("id", name=op.f("uq_vacancy_id")),
    )
    op.create_table(
        "job_place",
        sa.Column("company", sa.Text(), nullable=False),
        sa.Column("resume_id", sa.UUID(), nullable=False),
        sa.Column("position", sa.Text(), nullable=False),
        sa.Column(
            "speciality",
            postgresql.ENUM(
                "разработка",
                "аналитика",
                "devops",
                "системное администрирование",
                "дата-инженерия",
                "машинное обучение",
                "управление проектами",
                "руководство разработкой",
                "архитектура проектов",
                "информационная безопасность",
                "тестирование",
                name="speciality",
            ),
            nullable=False,
        ),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("start_date", sa.DateTime(timezone=True), nullable=False),
        sa.Column("end_date", sa.DateTime(timezone=True), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["resume_id"],
            ["resume.id"],
            name=op.f("fk_job_place_resume_id_resume"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_job_place")),
        sa.UniqueConstraint("id", name=op.f("uq_job_place_id")),
    )
    op.create_table(
        "resume_tool",
        sa.Column("resume_id", sa.UUID(), nullable=False),
        sa.Column("tool_id", sa.UUID(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["resume_id"],
            ["resume.id"],
            name=op.f("fk_resume_tool_resume_id_resume"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["tool_id"],
            ["tool.id"],
            name=op.f("fk_resume_tool_tool_id_tool"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_resume_tool")),
        sa.UniqueConstraint("id", name=op.f("uq_resume_tool_id")),
    )
    op.create_table(
        "vacancy_tool",
        sa.Column("vacancy_id", sa.UUID(), nullable=False),
        sa.Column("tool_id", sa.UUID(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["tool_id"],
            ["tool.id"],
            name=op.f("fk_vacancy_tool_tool_id_tool"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["vacancy_id"],
            ["vacancy.id"],
            name=op.f("fk_vacancy_tool_vacancy_id_vacancy"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_vacancy_tool")),
        sa.UniqueConstraint("id", name=op.f("uq_vacancy_tool_id")),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("vacancy_tool")
    op.drop_table("resume_tool")
    op.drop_table("job_place")
    op.drop_table("vacancy")
    op.drop_table("resume")
    op.drop_table("employer")
    op.drop_table("recovery_token")
    op.drop_table("employee")
    op.drop_table("company")
    op.drop_table("answer")
    op.drop_table("user")
    op.drop_table("tool")
    op.drop_table("question")
    op.drop_table("city")
    # ### end Alembic commands ###
