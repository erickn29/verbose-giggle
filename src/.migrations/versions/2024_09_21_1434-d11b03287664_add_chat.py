"""add_chat

Revision ID: d11b03287664
Revises: 139142716e39
Create Date: 2024-09-21 14:34:22.635542

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "d11b03287664"
down_revision: Union[str, None] = "139142716e39"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "chat",
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("title", sa.Text(), nullable=False),
        sa.Column("config", sa.JSON(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
            name=op.f("fk_chat_user_id_user"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_chat")),
        sa.UniqueConstraint("id", name=op.f("uq_chat_id")),
    )
    op.create_table(
        "message",
        sa.Column("chat_id", sa.UUID(), nullable=False),
        sa.Column("text", sa.Text(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["chat_id"],
            ["chat.id"],
            name=op.f("fk_message_chat_id_chat"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_message")),
        sa.UniqueConstraint("id", name=op.f("uq_message_id")),
    )
    op.create_unique_constraint(op.f("uq_answer_id"), "answer", ["id"])
    op.create_unique_constraint(op.f("uq_city_id"), "city", ["id"])
    op.create_unique_constraint(op.f("uq_company_id"), "company", ["id"])
    op.create_unique_constraint(op.f("uq_employee_id"), "employee", ["id"])
    op.create_unique_constraint(op.f("uq_employer_id"), "employer", ["id"])
    op.create_unique_constraint(op.f("uq_job_place_id"), "job_place", ["id"])
    op.add_column(
        "question", sa.Column("complexity", sa.String(), nullable=False)
    )
    op.create_unique_constraint(op.f("uq_question_id"), "question", ["id"])
    op.create_unique_constraint(
        op.f("uq_recovery_token_id"), "recovery_token", ["id"]
    )
    op.create_unique_constraint(op.f("uq_resume_id"), "resume", ["id"])
    op.create_unique_constraint(
        op.f("uq_resume_tool_id"), "resume_tool", ["id"]
    )
    op.create_unique_constraint(op.f("uq_tool_id"), "tool", ["id"])
    op.add_column(
        "user", sa.Column("subscription", sa.DateTime(), nullable=True)
    )
    op.create_unique_constraint(op.f("uq_user_id"), "user", ["id"])
    op.create_unique_constraint(op.f("uq_vacancy_id"), "vacancy", ["id"])
    op.create_unique_constraint(
        op.f("uq_vacancy_tool_id"), "vacancy_tool", ["id"]
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(
        op.f("uq_vacancy_tool_id"), "vacancy_tool", type_="unique"
    )
    op.drop_constraint(op.f("uq_vacancy_id"), "vacancy", type_="unique")
    op.drop_constraint(op.f("uq_user_id"), "user", type_="unique")
    op.drop_column("user", "subscription")
    op.drop_constraint(op.f("uq_tool_id"), "tool", type_="unique")
    op.drop_constraint(
        op.f("uq_resume_tool_id"), "resume_tool", type_="unique"
    )
    op.drop_constraint(op.f("uq_resume_id"), "resume", type_="unique")
    op.drop_constraint(
        op.f("uq_recovery_token_id"), "recovery_token", type_="unique"
    )
    op.drop_constraint(op.f("uq_question_id"), "question", type_="unique")
    op.drop_column("question", "complexity")
    op.drop_constraint(op.f("uq_job_place_id"), "job_place", type_="unique")
    op.drop_constraint(op.f("uq_employer_id"), "employer", type_="unique")
    op.drop_constraint(op.f("uq_employee_id"), "employee", type_="unique")
    op.drop_constraint(op.f("uq_company_id"), "company", type_="unique")
    op.drop_constraint(op.f("uq_city_id"), "city", type_="unique")
    op.drop_constraint(op.f("uq_answer_id"), "answer", type_="unique")
    op.drop_table("message")
    op.drop_table("chat")
    # ### end Alembic commands ###
